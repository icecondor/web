extends layout

block head
  script(src='//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js')
  script(src='//cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.2.3/leaflet.draw.js')
  link(rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css")
  link(rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.2.3/leaflet.draw.css")
block content
  div.page-fences
    div.fence-detail.hidden
      a.fence-home Fences
      div.detail
      | "#[span.name]"

      div.map
        div#map

    div.fence-list.hidden
      div.section-spacer
        h2 Fences
        ul.fences

      div.section-spacer
        h2 Make a fence
        form.build-fence
          .keygensection
            | Name
            input(name='name' checked='checked' )
          input(type='submit' value='Make fence')

  template#fence.hidden
    p
      button X
      | Name: #[a(href="{{link}}") {{name}}] Area: {{area}} sq.meters


  script.
    jQuery(function(){
      var paths = window.location.pathname.split('/')
      var username = paths[1]
      var fenceId = paths[3]
      var qparams = url_params(window.location.href)
      console.log(qparams)
      $('.page-data .user .username').html(username)
      $('.fence-home').attr('href', '/'+username+'/fences')

      statusTab('Connecting')
      iceCondor.on('auth', function(session){
        if(fenceId) {
          $('.fence-detail').removeClass('hidden')
          var add_tx = iceCondor.api('fence.get', {id:fenceId})
          iceCondor.onResponse(add_tx, function(fence) {
            statusTab()
            $('.fence-detail span.name').html(fence.name)
            var bounds = [[32.8, -98.5],[48.8, -99.5]]

            var drawnItems = new L.FeatureGroup()
            console.log('first fence.geojson', fence.geojson)
            if(fence.geojson){
              var latlngs = fence.geojson.coordinates[0].map(function(l){return [l[1],l[0]]})
              var layer = L.polygon(latlngs)
              drawnItems.addLayer(layer);
              bounds = layer.getBounds()
              console.log('fence bounds', bounds)
            }

            var map_height = $(window).outerHeight()-
                                $('.navbar').outerHeight()-
                                $('.fence-detail .detail').outerHeight()-
                                $('.footer').outerHeight()-25
            $("#map").height(map_height)
            map.setup(bounds)
            map.map.add_draw(drawnItems)
            map.map.map.on('draw:created', function(l){jsonsave(l.layer)})
            map.map.map.on('draw:editstop', function(evt){
              evt.target.eachLayer(function(l){
                console.log('poly', l.editing._poly)
                if(l.editing && l.editing._poly){
                  jsonsave(l)
                }
              })
              //jsonsave(l.target)
            })
            function jsonsave(layer) {
              console.log(layer)
              fence.geojson = layer.toGeoJSON()
              map.map.map.addLayer(layer);
              statusTab('Saving fence')
              var fence_tx = iceCondor.api('fence.update', fence)
              iceCondor.onResponse(fence_tx, function(acc_ok) {
                statusTab()
              })
            }
          })
        } else {
          $('.fence-list').removeClass('hidden')
          $('.build-fence').submit(function(evt){
            var fence_attr = {}
            fence_attr.name = evt.target.elements['name'].value
            var add_tx = iceCondor.api('fence.add', fence_attr)
            iceCondor.onResponse(add_tx, function(fence) {
              statusTab()
              window.location='/'+username+'/fences/'+fence.id
            })
            evt.preventDefault()
          })
          fences_refresh()
          statusTab()
        }
      })

      if(getKey()){
        iceCondor.connect()
      } else {
        window.location = "/"
      }

      function fences_refresh(){
        var fence_tmpl = uStache.compile($('template#fence').html())
        var list_tx = iceCondor.api('fence.list')
        iceCondor.onResponse(list_tx, function(fences) {
          $('ul.fences').empty()
          fences.forEach(function(fence){
            fence.link = '/'+username+'/fences/'+fence.id
            fence.area = fence.area ? fence.area : ""
            $('ul.fences').append('<li id="'+fence.id+'">'+
                                  fence_tmpl(fence)+
                                  '</li>')
            $('li#'+fence.id+' button').click(function(evt){
              console.log(evt)
              var tx = iceCondor.api('fence.del', {id:fence.id})
              iceCondor.onResponse(tx, function(acc_ok) {
                fences_refresh()
              })
              evt.preventDefault()
            })
          })
        })
      }
    })

