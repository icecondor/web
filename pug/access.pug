extends layout

block head

block content
  div.page-access
    h2 Access Control

    h1 Keylist
    ul.keylist

    template#rule.hidden
      p
        | Created:
        time(datetime="{{created_at}}" data-format="MMM-d hh:mmtt")
        |  Expires:
        span(class="{{expired_style}}")
          time(datetime="{{expires_at}}" data-format="MMM-d hh:mmtt")
      p
        | Access: {{access}}
        span(class="delete_button")
          |
          button(title='delete') X
      .keylink
        a(href="{{me_url}}") {{me_url}}
      p
        span.apikey
          | {{key}}

    h1 Generate Key
    form.build-access
      .keygensection
        | Access Type
        .keygendetail
          input(type='radio' name='level' value='read' checked='checked' disabled)
          | Read Location
        .keygendetail
          input(type='radio' name='level' value='write' checked='checked' disabled)
          | Read+Write Location
      .keygensection
        input(type='checkbox' name='expires' checked='checked' disabled)
        | Expires in
        .keygendetail
          | Hours
          input(type='number' name='expires-hours' value='8' disabled)
      input(type='submit' value='Generate Key' disabled)


  script.
    var qparams = url_params(window.location.href)
    var paths = window.location.pathname.split('/')
    jQuery(function(){
      statusTab('Connecting')
      iceCondor.on('auth', function(session){
        console.log(session.user.username, paths[1] )
        if(session.user.username != paths[1]){
          statusTab('no access')
          if(session.user.username) {
            window.location = '/'+session.user.username+'/access'
          } else {
            window.location = '/'
          }
        }
        statusTab('loading data')
        keylist_refresh()
        enable_gen_form()

        $('.build-access').submit(function(evt){
          var level = evt.target.elements['level'].value
          var rule = { scopes: [level] }
          if(evt.target.elements['expires'].checked){
            var hours = evt.target.elements['expires-hours'].value
            rule.expires_at = (new XDate()).addHours(hours)
          }
          console.log(rule)

          var add_tx = iceCondor.api('user.access.add', rule)
          iceCondor.onResponse(add_tx, function(acc_ok) {
            keylist_refresh()
          })
          evt.preventDefault()
        })
      })

      if(getKey()){
        iceCondor.connect()
      } else {
        window.location = "/"
      }

      function keylist_refresh() {
        var me_tx = iceCondor.api('user.detail')
        iceCondor.onResponse(me_tx, function(me) {
          statusTab()
          $('.keylist').empty()
          var keydates = Object.keys(me.access).map(function(k){
                      return {key:k, date: me.access[k].created_at}
                      })
          keydates = keydates.sort(function(a,b){
                      if(a.date && b.date) {
                        if ( a.date < b.date ) { return 1 }
                        if ( a.date > b.date ) { return -1 }
                        return 0;
                      } else { return -1}
                      })
          keydates.forEach(function(datekey){
            var akey = datekey.key
            var key_html = keydetail(me.username, akey, me.access[akey])
            var key_li = $('.keylist').append(key_html)
            $('li#key-'+akey+' button').click(function(evt){
                console.log(evt)
                var add_tx = iceCondor.api('user.access.del', {key: akey})
                iceCondor.onResponse(add_tx, function(acc_ok) {
                  keylist_refresh()
                })
              })
          })
          time_fixups('ul.keylist')
        })
      }

      function keydetail(username, key, rule){
        console.log('keydetail pre', rule)
        rule.access = rule.scopes[0]
        rule.me_url = rule.access == "read" ? 'https://icecondor.com/'+username+'?key='+key : ''
        rule.key = rule.access == "write" ? key : ''
        rule.expired_style = ''
        if(rule.expires_at) {
          if ((new Date(rule.expires_at)) < (new Date()) ) {
            rule.expired_style = 'overdue'
          }
        } else {
          rule.expired_style = 'hidden'
          rule.expires_at = ''
        }
        console.log('keydetail post', rule)
        var rule_tmpl = uStache.compile($('template#rule').html())
        return '<li class="key" id="key-'+key+'">'+
                rule_tmpl(rule)+
               '</li>'
      }

      function enable_gen_form(){
        $('form.build-access input').prop('disabled', false)
      }
    })
